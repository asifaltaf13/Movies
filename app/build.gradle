plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'

    // dependency injection
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
}

android {
    namespace 'com.asifaltaf.movies'
    compileSdk 33

    defaultConfig {
        applicationId "com.asifaltaf.movies"
        minSdk 26
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        // Loading the API Key from Local Properties into Build Configurations
        Properties localProperties = new Properties()
        def fileName = "local.properties"
        def localPropertiesFile = project.rootProject.file(fileName)
        localProperties.load(localPropertiesFile.newDataInputStream())
        if(localProperties.getProperty("API_KEY") == null) throw new GradleException("API_KEY is null")
        buildConfigField "String", "API_KEY", "\"${localProperties.getProperty("API_KEY")}\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
        buildConfig true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.3.2'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    // for status bar coloring
    implementation 'com.google.accompanist:accompanist-systemuicontroller:0.30.0'

    // room persistence library
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    kapt "androidx.room:room-compiler:$room_version" // to use kotlin annotation processing tool (kapt)
    implementation "androidx.room:room-ktx:$room_version" // support kotlin extensions and coroutines (e.g. flow)

    // navigation
    implementation "androidx.navigation:navigation-compose:$navigation_version"

    // hilt dependency injection
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"

    // additional compose dependencies
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0' // to get view model in compose using hiltViewModel()

    // retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    // coil
    implementation("io.coil-kt:coil-bom:2.3.0")
    implementation("io.coil-kt:coil")
    implementation("io.coil-kt:coil-compose")


    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.5.1'
    implementation platform('androidx.compose:compose-bom:2022.10.00')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'


    // unit tests
    testImplementation "junit:junit:4.13.2"
    testImplementation "org.mockito:mockito-core:4.0.0"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    testImplementation "androidx.arch.core:core-testing:2.2.0"
    testImplementation "com.squareup.okhttp3:mockwebserver:4.9.0"
    testImplementation 'app.cash.turbine:turbine:0.12.3'


    // instrumented tests
    androidTestImplementation 'junit:junit:4.13.2'
    androidTestImplementation "androidx.test:core:$test_core_version"
    androidTestImplementation "androidx.test:core-ktx:$test_core_version"
    androidTestImplementation "androidx.test.ext:junit:$test_ext_version"
    androidTestImplementation "androidx.test.ext:junit-ktx:$test_ext_version"
    androidTestImplementation "androidx.test:runner:$test_runner_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_core_version"
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    androidTestImplementation platform('androidx.compose:compose-bom:2022.10.00')
    androidTestImplementation "androidx.arch.core:core-testing:2.2.0"
    androidTestImplementation "androidx.room:room-testing:$room_version"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    androidTestImplementation 'app.cash.turbine:turbine:0.12.3'


    // debug
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
}

// dependency injection
// Allow references to generated code
kapt {
    correctErrorTypes true
}